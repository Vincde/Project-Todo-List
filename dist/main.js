(()=>{class e{constructor(e){this.name=e}changeName(e){this.name=e}getName(){return this.name}}!function(){const t=document.querySelector(".buttons button:first-of-type"),n=[1,2,3,4,5],o=[];t.addEventListener("click",(()=>{!function(){const e=document.createElement("div"),t=document.createElement("label"),n=document.createElement("input"),o=document.createElement("button");e.setAttribute("class","projectForm"),o.setAttribute("type","button"),o.textContent="Ok",n.setAttribute("id","NewProjectName"),t.textContent="Name => ",t.setAttribute("for","NewProjectName"),e.appendChild(t),e.appendChild(n),e.appendChild(o),document.querySelector("body").appendChild(e)}(),function(){const e=document.querySelectorAll("div:not(.projectForm)");for(all of e)all.style.filter="blur(1px)"}(),function(t){const n=document.querySelector(".projectForm button"),o=document.querySelector(".projectForm"),r=document.querySelector(".projectForm input");n.addEventListener("click",(()=>{if(""!=r.value||null!=r.value||null!=r.value){let l=(c=r.value,new e(c));t.push(l),n.parentElement.parentElement.removeChild(o),function(e){const t=document.querySelector(".my-projects"),n=document.createElement("button");n.setAttribute("type","button"),n.textContent=e,t.appendChild(n)}(l.getName()),function(){const e=document.querySelectorAll("div:not(.projectForm)");for(all of e)all.style.filter="blur(0)"}()}var c}))}(o),function(...e){for(elem of(document.querySelector(".my-projects button:last-of-type").textContent,e))2===elem&&console.log("aaa")}(...n)}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,