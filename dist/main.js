(()=>{"use strict";const e=function(){const e=[];return{pushProjectIntoArray:t=>{e.push(t)},getName:t=>e[t].getName(),getLength:()=>e.length,deleteElement:t=>{e.splice(t,1)}}}(),t=e;class n{constructor(e){this.name=e}changeName(e){this.name=e}getName(){return this.name}}const o=function(){const e=[];return{addElement:t=>{e.push(t)},getDescription:t=>e[t].getDescription(),getDueDate:t=>e[t].getDate(),getPriority:t=>e[t].getPriority(),getProjectName:t=>e[t].getLink(),getLength:()=>e.length,getLink:t=>e[t].getLink(),getName:t=>e[t].getTitle(),deleteElement:t=>{e.splice(t,1)},changeName:(t,n)=>{e[t].changeName(n)},changeDescription:(t,n)=>{e[t].changeDescription(n)},changeDueDate:(t,n)=>{e[t].changeDueDate(n)},changePriority:(t,n)=>{e[t].changePriority(n)},changeLink:(t,n)=>{e[t].changeLink(n)}}}(),r=o,c=function(e){let o=function(e){return new n(e)}(e);t.pushProjectIntoArray(o)};function u(e){const t=document.querySelector(".my-projects"),n=document.createElement("button");n.setAttribute("type","button"),n.textContent=e,t.appendChild(n)}function l(){const e=document.querySelector(".my-projects button:last-of-type"),n=document.querySelector(".todo-board");e.addEventListener("click",(()=>{b();const o=document.createElement("button");var c;o.setAttribute("type","button"),o.textContent="delete this project",n.appendChild(o),c=e.textContent,document.querySelector(".todo-board button:nth-child(1)").addEventListener("click",(()=>{if(0!==r.getLength())for(let e=0;e<r.getLength();e++)r.getLink(e)===c&&r.deleteElement(e);for(let e=0;e<t.getLength();e++)if(t.getName(e)===c){t.deleteElement(e),d();break}const e=document.querySelectorAll(".my-projects button");for(let t of e)t.textContent===c&&t.parentElement.removeChild(t);b()})),function(e){for(let t=0;t<r.getLength();t++)r.getLink(t)===e&&(i(),a(t),h(),f(t))}(e.textContent)}))}function i(){const e=document.createElement("div"),t=document.createElement("button"),n=document.querySelector(".todo-board");t.setAttribute("type","button"),t.textContent="delete this task",e.appendChild(t),n.appendChild(e)}function a(e){const t=document.querySelector(".todo-board > div:last-of-type"),n=document.createElement("div"),o=document.createElement("p"),c=document.createElement("p"),u=document.createElement("p"),l=document.createElement("p");o.textContent=r.getName(e),c.textContent=r.getDescription(e),u.textContent=r.getDueDate(e),l.textContent=r.getPriority(e),n.appendChild(o),n.appendChild(c),n.appendChild(u),n.appendChild(l),t.appendChild(n)}function d(){let e=[];for(let n=0;n<t.getLength();n++)e.push(t.getName(n));localStorage.setItem("projects",JSON.stringify(e))}function m(){const e=document.createElement("div"),n=document.createElement("label"),o=document.createElement("input"),r=document.createElement("label"),c=document.createElement("input"),u=document.createElement("label"),l=document.createElement("input"),i=document.createElement("label"),a=document.createElement("input"),d=document.createElement("label"),m=document.createElement("select");d.setAttribute("for","labelSelect"),d.textContent="which project",m.setAttribute("id","labelSelect"),m.setAttribute("name","selectOption");const s=document.createElement("option");s.setAttribute("value","0"),s.textContent="none",m.appendChild(s);for(let e=0;e<t.getLength();e++){const n=document.createElement("option");n.textContent=`${t.getName(e)}`,n.setAttribute("value",`${t.getName(e)}`),m.appendChild(n)}const p=document.createElement("button");e.setAttribute("class","taskForm"),p.setAttribute("type","button"),p.textContent="Ok",o.setAttribute("id","NewTaskName"),n.textContent="Name => ",n.setAttribute("for","NewTaskName"),c.setAttribute("id","NewTaskDescription"),r.textContent="Description => ",r.setAttribute("for","NewTaskDescription"),l.setAttribute("id","NewTaskDate"),u.textContent="DueDate => ",u.setAttribute("for","NewTaskDate"),a.setAttribute("id","NewTaskPrio"),i.textContent="Priority => ",i.setAttribute("for","NewTaskPrio"),e.appendChild(n),e.appendChild(o),o.insertAdjacentHTML("afterend","<br>"),e.appendChild(r),e.appendChild(c),c.insertAdjacentHTML("afterend","<br>"),e.appendChild(u),e.appendChild(l),l.insertAdjacentHTML("afterend","<br>"),e.appendChild(i),e.appendChild(a),a.insertAdjacentHTML("afterend","<br>"),e.appendChild(d),e.appendChild(m),m.insertAdjacentHTML("afterend","<br>"),e.appendChild(p),document.querySelector("body").appendChild(e)}function s(){const e=document.querySelectorAll("div:not(.taskForm)");for(let t of e)t.style.filter="blur(1px)"}function p(){const e=document.querySelector(".taskForm button"),t=document.querySelector(".taskForm");e.parentElement.parentElement.removeChild(t)}function g(){const e=document.querySelectorAll("div:not(.taskForm)");for(let t of e)t.style.filter="blur(0)"}function h(){const e=document.querySelector(".todo-board div:last-of-type button:nth-child(1)"),t=document.querySelector(".todo-board div:last-of-type > div > p:nth-child(1)");e.addEventListener("click",(()=>{for(let e=0;e<r.getLength();e++)r.getName(e)===t.textContent&&r.deleteElement(e);b()}))}function f(e){document.querySelector(".todo-board div:last-of-type");const t=document.querySelector(".todo-board div:last-of-type button:nth-child(1)"),n=document.createElement("button");document.querySelector(".todo-board div:last-of-type div"),n.setAttribute("type","button"),n.textContent="Rename the Form",t.parentNode.insertBefore(n,t.nextSibling),n.addEventListener("click",(()=>{m(),s();const t=document.querySelector(".taskForm select"),n=document.querySelectorAll(".taskForm input");n[0].value=r.getName(e),n[1].value=r.getDescription(e),n[2].value=r.getDueDate(e),n[3].value=r.getPriority(e),t.value=r.getLink(e),document.querySelector(".taskForm button").addEventListener("click",(()=>{r.changeName(e,n[0].value),r.changeDescription(e,n[1].value),r.changeDueDate(e,n[2].value),r.changePriority(e,n[3].value),r.changeLink(e,t.value),g(),p()}))}))}function b(){const e=document.querySelectorAll(".todo-board *");for(let t of e)t.remove()}!function(){if(document.querySelector(".my-projects button").addEventListener("click",(()=>{b();for(let e=0;e<r.getLength();e++)i(),a(e),f(e)})),document.querySelector(".buttons button:first-of-type").addEventListener("click",(()=>{!function(){const e=document.createElement("div"),t=document.createElement("label"),n=document.createElement("input"),o=document.createElement("button");e.setAttribute("class","projectForm"),o.setAttribute("type","button"),o.textContent="Ok",n.setAttribute("id","NewProjectName"),t.textContent="Name => ",t.setAttribute("for","NewProjectName"),e.appendChild(t),e.appendChild(n),e.appendChild(o),document.querySelector("body").appendChild(e)}(),function(){const e=document.querySelectorAll("div:not(.projectForm)");for(let t of e)t.style.filter="blur(1px)"}(),function(){const e=document.querySelector(".projectForm button"),t=(document.querySelector(".projectForm"),document.querySelector(".projectForm input"));e.addEventListener("click",(()=>{""==t.value&&null==t.value&&null==t.value||(c(t.value),u(t.value),function(){const e=document.querySelector(".projectForm button"),t=document.querySelector(".projectForm");e.parentElement.parentElement.removeChild(t)}(),function(){const e=document.querySelectorAll("div:not(.projectForm)");for(let t of e)t.style.filter="blur(0)"}(),l(),d())}))}()})),document.querySelector(".buttons button:nth-child(2)").addEventListener("click",(()=>{m(),s(),function(){const e=document.querySelector(".taskForm button"),t=document.querySelectorAll(".taskForm input"),n=document.querySelector(".taskForm select");e.addEventListener("click",(()=>{let e=t[0].value,o=t[1].value,c=t[2].value,u=t[3].value,l=n.value;e&&o&&c&&u&&(function(e,t,n,o,c){const u=function(e,t,n,o,r){let c=e,u=t,l=n,i=o,a=r;return{getTitle:function(){return c},getDescription:function(){return u},getDate:function(){return l},getPriority:function(){return i},getProjectName:function(){return a},getLink:function(){return a},changeName:function(e){c=e},changeDescription:function(e){u=e},changeDueDate:function(e){l=e},changePriority:function(e){i=e},changeLink:function(e){a=e}}}(e,t,n,o,c);r.addElement(u)}(e,o,c,u,l),p(),g())}))}()})),localStorage.getItem("projects")){let e=JSON.parse(localStorage.getItem("projects"));for(let t=0;t<e.length;t++)c(e[t]),u(e[t]),l()}}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,