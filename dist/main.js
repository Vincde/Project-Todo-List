(()=>{function t(t,e,o,n){return this.todoName=t,this.description=e,this.dueDate=o,this.priority=n,{printIt:()=>`name:  ${this.todoName}   description:   ${e}  duedate:  ${o}  priority: ${n}`}}function e(){const t=document.querySelectorAll(".todo-board div");for(let e=0;e<t.length;e++)t[e].parentElement.removeChild(t[e])}function o(){const t=document.querySelectorAll(".div-new-inputs input");let e=[0,0,0,0];return e[0]=t[0].value,e[1]=t[1].value,e[2]=t[2].value,e[3]=t[3].value,e}!function(){const n=[];let i;const d=document.querySelector(".dashboard input"),r=document.querySelector(".dashboard button:first-of-type"),c=document.querySelector(".delete"),u=document.querySelector(".add-todo");r.addEventListener("click",(()=>{let t=d.value;const o=function(t){return this.name=t,this.todo=[],this.getName=()=>this.name,this.pushObj=t=>{this.todo[this.todo.length]=t},this.getTodo=()=>this.todo,{getName,pushObj,getTodo}}(t);n.push(o),function(t){const e=document.querySelector(".projects"),o=document.createElement("button");o.setAttribute("type","button"),o.textContent=t,e.appendChild(o)}(t);let r=document.querySelector(".projects button:last-of-type");r.addEventListener("click",(t=>{i=r.textContent,e(),function(t,e){const o=document.querySelector(".todo-board");for(let n=0;n<e.length;n++)if(t===e[n].getName()){let t=e[n].getTodo();for(let e=0;e<t.length;e++){let n=document.createElement("div");n.textContent=t[e].printIt(),o.appendChild(n)}}}(i,n)}))})),c.addEventListener("click",(()=>{e();for(let t=0;t<n.length;t++)n[t].getName()===i&&n.slice(t,1);!function(t){const e=document.querySelectorAll(".projects button");for(let o=0;o<e.length;o++)e[o].textContent===t&&e[o].remove()}(i)})),function(){const t=document.querySelector(".dashboard"),e=document.createElement("div");e.setAttribute("class","div-new-inputs");let o=["name","description","due date","priority"];for(let t=0;t<4;t++){const n=document.createElement("input"),i=document.createElement("label");n.setAttribute("type","text"),n.setAttribute("id",`${o[t]}`),i.setAttribute("for",`${o[t]}`),i.textContent=o[t],e.appendChild(i),e.appendChild(n),n.getAttribute("id")===o[1]&&(n.style.width="150px",n.style.height="150px")}t.appendChild(e)}(),u.addEventListener("click",(()=>{let e,d;for(let r=0;r<n.length;r++)if(d=n[r].getName(),d===i){e=o();const i=t(e[0],e[1],e[2],e[3]),d=t("ciao","sono","vicn","f");n[r].pushObj(i),n[r].pushObj(d)}}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,