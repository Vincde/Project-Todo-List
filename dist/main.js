(()=>{"use strict";const e=function(){const e=[];return{pushProjectIntoArray:t=>{e.push(t)},getName:t=>e[t].getName(),getLength:()=>e.length,deleteElement:t=>{e.splice(t,1)}}}(),t=e;class n{constructor(e){this.name=e}changeName(e){this.name=e}getName(){return this.name}}const o=function(e,t,n,o,r){let c=e,l=t,u=n,i=o,a=r;return{getTitle:function(){return c},getDescription:function(){return l},getDate:function(){return u},getPriority:function(){return i},getProjectName:function(){return a},getLink:function(){return a},changeName:function(e){c=e},changeDescription:function(e){l=e},changeDueDate:function(e){u=e},changePriority:function(e){i=e},changeLink:function(e){a=e}}},r=function(){const e=[];return{addElement:t=>{e.push(t)},getDescription:t=>e[t].getDescription(),getDueDate:t=>e[t].getDate(),getPriority:t=>e[t].getPriority(),getProjectName:t=>e[t].getLink(),getLength:()=>e.length,getLink:t=>e[t].getLink(),getName:t=>e[t].getTitle(),deleteElement:t=>{e.splice(t,1)},changeName:(t,n)=>{e[t].changeName(n)},changeDescription:(t,n)=>{e[t].changeDescription(n)},changeDueDate:(t,n)=>{e[t].changeDueDate(n)},changePriority:(t,n)=>{e[t].changePriority(n)},changeLink:(t,n)=>{e[t].changeLink(n)}}}(),c=r;function l(e,t,n,r,l){const u=o(e,t,n,r,l);c.addElement(u)}const u=function(e){let o=function(e){return new n(e)}(e);t.pushProjectIntoArray(o)};function i(e){const t=document.querySelector(".my-projects"),n=document.createElement("button");n.setAttribute("type","button"),n.textContent=e,t.appendChild(n)}function a(){const e=document.querySelector(".my-projects button:last-of-type"),n=document.querySelector(".todo-board");e.addEventListener("click",(()=>{C();const o=document.createElement("button");var r;o.setAttribute("type","button"),o.textContent="delete this project",n.appendChild(o),r=e.textContent,document.querySelector(".todo-board button:nth-child(1)").addEventListener("click",(()=>{if(0!==c.getLength())for(let e=0;e<c.getLength();e++)c.getLink(e)===r&&c.deleteElement(e);for(let e=0;e<t.getLength();e++)if(t.getName(e)===r){t.deleteElement(e),s();break}const e=document.querySelectorAll(".my-projects button");for(let t of e)t.textContent===r&&t.parentElement.removeChild(t);C()})),function(e){for(let t=0;t<c.getLength();t++)c.getLink(t)===e&&(d(),m(t),b(),y(t))}(e.textContent)}))}function d(){const e=document.createElement("div"),t=document.createElement("button"),n=document.querySelector(".todo-board");t.setAttribute("type","button"),t.textContent="delete this task",e.appendChild(t),n.appendChild(e)}function m(e){const t=document.querySelector(".todo-board > div:last-of-type"),n=document.createElement("div"),o=document.createElement("p"),r=document.createElement("p"),l=document.createElement("p"),u=document.createElement("p");o.textContent=c.getName(e),r.textContent=c.getDescription(e),l.textContent=c.getDueDate(e),u.textContent=c.getPriority(e),n.appendChild(o),n.appendChild(r),n.appendChild(l),n.appendChild(u),t.appendChild(n)}function s(){let e=[];for(let n=0;n<t.getLength();n++)e.push(t.getName(n));localStorage.setItem("projects",JSON.stringify(e))}function p(){const e=document.createElement("div"),n=document.createElement("label"),o=document.createElement("input"),r=document.createElement("label"),c=document.createElement("input"),l=document.createElement("label"),u=document.createElement("input"),i=document.createElement("label"),a=document.createElement("input"),d=document.createElement("label"),m=document.createElement("select");d.setAttribute("for","labelSelect"),d.textContent="which project",m.setAttribute("id","labelSelect"),m.setAttribute("name","selectOption");const s=document.createElement("option");s.setAttribute("value","0"),s.textContent="none",m.appendChild(s);for(let e=0;e<t.getLength();e++){const n=document.createElement("option");n.textContent=`${t.getName(e)}`,n.setAttribute("value",`${t.getName(e)}`),m.appendChild(n)}const p=document.createElement("button");e.setAttribute("class","taskForm"),p.setAttribute("type","button"),p.textContent="Ok",o.setAttribute("id","NewTaskName"),n.textContent="Name => ",n.setAttribute("for","NewTaskName"),c.setAttribute("id","NewTaskDescription"),r.textContent="Description => ",r.setAttribute("for","NewTaskDescription"),u.setAttribute("id","NewTaskDate"),l.textContent="DueDate => ",l.setAttribute("for","NewTaskDate"),a.setAttribute("id","NewTaskPrio"),i.textContent="Priority => ",i.setAttribute("for","NewTaskPrio"),e.appendChild(n),e.appendChild(o),o.insertAdjacentHTML("afterend","<br>"),e.appendChild(r),e.appendChild(c),c.insertAdjacentHTML("afterend","<br>"),e.appendChild(l),e.appendChild(u),u.insertAdjacentHTML("afterend","<br>"),e.appendChild(i),e.appendChild(a),a.insertAdjacentHTML("afterend","<br>"),e.appendChild(d),e.appendChild(m),m.insertAdjacentHTML("afterend","<br>"),e.appendChild(p),document.querySelector("body").appendChild(e)}function g(){const e=document.querySelectorAll("div:not(.taskForm)");for(let t of e)t.style.filter="blur(1px)"}function h(){const e=document.querySelector(".taskForm button"),t=document.querySelector(".taskForm");e.parentElement.parentElement.removeChild(t)}function f(){const e=document.querySelectorAll("div:not(.taskForm)");for(let t of e)t.style.filter="blur(0)"}function b(){const e=document.querySelector(".todo-board div:last-of-type button:nth-child(1)"),t=document.querySelector(".todo-board div:last-of-type > div > p:nth-child(1)");e.addEventListener("click",(()=>{for(let e=0;e<c.getLength();e++)c.getName(e)===t.textContent&&(c.deleteElement(e),v());C()}))}function y(e){document.querySelector(".todo-board div:last-of-type");const t=document.querySelector(".todo-board div:last-of-type button:nth-child(1)"),n=document.createElement("button");document.querySelector(".todo-board div:last-of-type div"),n.setAttribute("type","button"),n.textContent="Rename the Form",t.parentNode.insertBefore(n,t.nextSibling),n.addEventListener("click",(()=>{p(),g();const t=document.querySelector(".taskForm select"),n=document.querySelectorAll(".taskForm input");n[0].value=c.getName(e),n[1].value=c.getDescription(e),n[2].value=c.getDueDate(e),n[3].value=c.getPriority(e),t.value=c.getLink(e),document.querySelector(".taskForm button").addEventListener("click",(()=>{c.changeName(e,n[0].value),c.changeDescription(e,n[1].value),c.changeDueDate(e,n[2].value),c.changePriority(e,n[3].value),c.changeLink(e,t.value),f(),h(),v()}))}))}function v(){let e=[];for(let t=0;t<c.getLength();t++)e.push(c.getName(t)),e.push(c.getDescription(t)),e.push(c.getDueDate(t)),e.push(c.getPriority(t)),e.push(c.getLink(t));localStorage.setItem("tasks",JSON.stringify(e))}function C(){const e=document.querySelectorAll(".todo-board *");for(let t of e)t.remove()}!function(){if(localStorage.getItem("projects")){let e=JSON.parse(localStorage.getItem("projects"));for(let t=0;t<e.length;t++)u(e[t]),i(e[t]),a()}if(localStorage.getItem("tasks")){let e=[];e=JSON.parse(localStorage.getItem("tasks"));let t=0;for(;t<=e.length;)l(e[t],e[t+1],e[t+2],e[t+3],e[t+4]),t+=5}document.querySelector(".my-projects button").addEventListener("click",(()=>{C();for(let e=0;e<c.getLength();e++)d(),m(e),y(e)})),document.querySelector(".buttons button:first-of-type").addEventListener("click",(()=>{!function(){const e=document.createElement("div"),t=document.createElement("label"),n=document.createElement("input"),o=document.createElement("button");e.setAttribute("class","projectForm"),o.setAttribute("type","button"),o.textContent="Ok",n.setAttribute("id","NewProjectName"),t.textContent="Name => ",t.setAttribute("for","NewProjectName"),e.appendChild(t),e.appendChild(n),e.appendChild(o),document.querySelector("body").appendChild(e)}(),function(){const e=document.querySelectorAll("div:not(.projectForm)");for(let t of e)t.style.filter="blur(1px)"}(),function(){const e=document.querySelector(".projectForm button"),t=(document.querySelector(".projectForm"),document.querySelector(".projectForm input"));e.addEventListener("click",(()=>{""==t.value&&null==t.value&&null==t.value||(u(t.value),i(t.value),function(){const e=document.querySelector(".projectForm button"),t=document.querySelector(".projectForm");e.parentElement.parentElement.removeChild(t)}(),function(){const e=document.querySelectorAll("div:not(.projectForm)");for(let t of e)t.style.filter="blur(0)"}(),a(),s())}))}()})),document.querySelector(".buttons button:nth-child(2)").addEventListener("click",(()=>{p(),g(),function(){const e=document.querySelector(".taskForm button"),t=document.querySelectorAll(".taskForm input"),n=document.querySelector(".taskForm select");e.addEventListener("click",(()=>{let e=t[0].value,o=t[1].value,r=t[2].value,c=t[3].value,u=n.value;e&&o&&r&&c&&(l(e,o,r,c,u),h(),f(),v())}))}()}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,