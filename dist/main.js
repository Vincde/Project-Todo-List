(()=>{"use strict";const e=function(){const e=[];return{pushProjectIntoArray:t=>{e.push(t)},getName:t=>e[t].getName(),getLength:()=>e.length,deleteElement:()=>{e.splice(i,1)}}}(),t=e;class n{constructor(e){this.name=e}changeName(e){this.name=e}getName(){return this.name}}const o=function(){const e=[];return{addElement:t=>{e.push(t)},getDescription:t=>e[t].getDescription(),getDueDate:t=>e[t].getDate(),getPriority:t=>e[t].getPriority(),getProjectName:t=>e[t].getLink(),getLength:()=>e.length,getLink:t=>e[t].getLink(),getName:t=>e[t].getTitle(),deleteElement:t=>{e.splice(t,1)}}}(),r=o,c=function(e){let o=function(e){return new n(e)}(e);t.pushProjectIntoArray(o)};function l(){const e=document.createElement("div"),t=document.createElement("button"),n=document.querySelector(".todo-board");t.setAttribute("type","button"),t.textContent="delete this task",e.appendChild(t),n.appendChild(e)}function u(e){const t=document.querySelector(".todo-board > div:last-of-type"),n=document.createElement("div"),o=document.createElement("p"),c=document.createElement("p"),l=document.createElement("p"),u=document.createElement("p");o.textContent=r.getName(e),c.textContent=r.getDescription(e),l.textContent=r.getDueDate(e),u.textContent=r.getPriority(e),n.appendChild(o),n.appendChild(c),n.appendChild(l),n.appendChild(u),t.appendChild(n)}function d(){const e=document.querySelector(".todo-board div:last-of-type button:nth-child(1)"),t=document.querySelector(".todo-board div:last-of-type > div > p:nth-child(1)");e.addEventListener("click",(()=>{for(let e=0;e<r.getLength();e++)r.getName(e)===t.textContent&&r.deleteElement(e);m()}))}function a(){const e=document.querySelector(".todo-board div:last-of-type"),t=document.createElement("button"),n=document.querySelector(".todo-board div:last-of-type div");t.setAttribute("type","button"),t.textContent="Rename the Form",e.insertBefore(t,n)}function m(){const e=document.querySelectorAll(".todo-board *");for(let t of e)t.remove()}document.querySelector(".my-projects button").addEventListener("click",(()=>{m();for(let e=0;e<r.getLength();e++)l(),u(e)})),document.querySelector(".buttons button:first-of-type").addEventListener("click",(()=>{!function(){const e=document.createElement("div"),t=document.createElement("label"),n=document.createElement("input"),o=document.createElement("button");e.setAttribute("class","projectForm"),o.setAttribute("type","button"),o.textContent="Ok",n.setAttribute("id","NewProjectName"),t.textContent="Name => ",t.setAttribute("for","NewProjectName"),e.appendChild(t),e.appendChild(n),e.appendChild(o),document.querySelector("body").appendChild(e)}(),function(){const e=document.querySelectorAll("div:not(.projectForm)");for(let t of e)t.style.filter="blur(1px)"}(),function(){const e=document.querySelector(".projectForm button"),n=(document.querySelector(".projectForm"),document.querySelector(".projectForm input"));e.addEventListener("click",(()=>{""==n.value&&null==n.value&&null==n.value||(c(n.value),function(e){const t=document.querySelector(".my-projects"),n=document.createElement("button");n.setAttribute("type","button"),n.textContent=e,t.appendChild(n)}(n.value),function(){const e=document.querySelector(".projectForm button"),t=document.querySelector(".projectForm");e.parentElement.parentElement.removeChild(t)}(),function(){const e=document.querySelectorAll("div:not(.projectForm)");for(let t of e)t.style.filter="blur(0)"}(),function(){const e=document.querySelector(".my-projects button:last-of-type"),n=document.querySelector(".todo-board");e.addEventListener("click",(()=>{m();const o=document.createElement("button");var c;o.setAttribute("type","button"),o.textContent="delete this project",n.appendChild(o),c=e.textContent,document.querySelector(".todo-board button:nth-child(1)").addEventListener("click",(()=>{for(let e=0;e<r.getLength();e++)r.getLink(e)===c&&r.deleteElement(e);for(let e=0;e<t.getLength;e++)if(t.getName(i)===c){t.deleteElement(i);break}const e=document.querySelectorAll(".my-projects button");for(let t of e)t.textContent===c&&t.parentElement.removeChild(t);m()})),function(e){for(let t=0;t<r.getLength();t++)r.getLink(t)===e&&(l(),u(t),d(),a())}(e.textContent)}))}())}))}()})),document.querySelector(".buttons button:nth-child(2)").addEventListener("click",(()=>{!function(){const e=document.createElement("div"),n=document.createElement("label"),o=document.createElement("input"),r=document.createElement("label"),c=document.createElement("input"),l=document.createElement("label"),u=document.createElement("input"),d=document.createElement("label"),i=document.createElement("input"),a=document.createElement("label"),m=document.createElement("select");a.setAttribute("for","labelSelect"),a.textContent="which project",m.setAttribute("id","labelSelect"),m.setAttribute("name","selectOption");const s=document.createElement("option");s.setAttribute("value","0"),s.textContent="none",m.appendChild(s);for(let e=0;e<t.getLength();e++){const n=document.createElement("option");n.textContent=`${t.getName(e)}`,n.setAttribute("value",`${t.getName(e)}`),m.appendChild(n)}const p=document.createElement("button");e.setAttribute("class","taskForm"),p.setAttribute("type","button"),p.textContent="Ok",o.setAttribute("id","NewTaskName"),n.textContent="Name => ",n.setAttribute("for","NewTaskName"),c.setAttribute("id","NewTaskDescription"),r.textContent="Description => ",r.setAttribute("for","NewTaskDescription"),u.setAttribute("id","NewTaskDate"),l.textContent="DueDate => ",l.setAttribute("for","NewTaskDate"),i.setAttribute("id","NewTaskPrio"),d.textContent="Priority => ",d.setAttribute("for","NewTaskPrio"),e.appendChild(n),e.appendChild(o),o.insertAdjacentHTML("afterend","<br>"),e.appendChild(r),e.appendChild(c),c.insertAdjacentHTML("afterend","<br>"),e.appendChild(l),e.appendChild(u),u.insertAdjacentHTML("afterend","<br>"),e.appendChild(d),e.appendChild(i),i.insertAdjacentHTML("afterend","<br>"),e.appendChild(a),e.appendChild(m),m.insertAdjacentHTML("afterend","<br>"),e.appendChild(p),document.querySelector("body").appendChild(e)}(),function(){const e=document.querySelectorAll("div:not(.taskForm)");for(let t of e)t.style.filter="blur(1px)"}(),function(){const e=document.querySelector(".taskForm button"),t=document.querySelectorAll(".taskForm input"),n=document.querySelector(".taskForm select");e.addEventListener("click",(()=>{let e=t[0].value,o=t[1].value,c=t[2].value,l=t[3].value,u=n.value;e&&o&&c&&l&&(function(e,t,n,o,c){const l=function(e,t,n,o,r){let c=e,l=t,u=n,d=o,i=r;return{getTitle:function(){return c},getDescription:function(){return l},getDate:function(){return u},getPriority:function(){return d},getProjectName:function(){return i},getLink:function(){return i}}}(e,t,n,o,c);r.addElement(l)}(e,o,c,l,u),function(){const e=document.querySelector(".taskForm button"),t=document.querySelector(".taskForm");e.parentElement.parentElement.removeChild(t)}(),function(){const e=document.querySelectorAll("div:not(.taskForm)");for(let t of e)t.style.filter="blur(0)"}())}))}()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,