(()=>{function t(t,e,n,o){this.name=t,this.description=e,this.dueDate=n,this.priority=o,this.print=()=>`name: ${t}, description: ${e}, dueDate: ${n}, priority: ${o}`}function e(){const t=document.querySelectorAll(".todo-board div");for(let e=0;e<t.length;e++)t[e].parentElement.removeChild(t[e])}function n(){const t=document.querySelectorAll(".div-new-inputs input");let e=[];for(elem of t)elem.value&&(e[0]=t[0].value,e[1]=t[1].value,e[2]=t[2].value,e[3]=t[3].value);return e}!function(){const o=[];let r;const u=document.querySelector(".dashboard input"),i=document.querySelector(".dashboard button:first-of-type"),l=document.querySelector(".delete"),c=document.querySelector(".add-todo");i.addEventListener("click",(()=>{if(u&&""!==u.value&&void 0!==u.value&&null!==u.value){let t=u.value;const n=function(t){return this.name=t,this.todo=[],this.getName=()=>this.name,this.push=t=>{this.todo.push(t)},this.getTodo=()=>this.todo,{getName,push,getTodo}}(t);o.push(n),function(t){const e=document.querySelector(".projects"),n=document.createElement("button");n.setAttribute("type","button"),n.textContent=t,e.appendChild(n)}(t);const i=document.querySelector(".projects button:last-of-type");i&&i.addEventListener("click",(t=>{r=t.currentTarget.textContent,e(),function(t,e){const n=document.querySelector(".todo-board");for(let o=0;o<e.length;o++)if(t===e[o].getName()){let t=e[o].getTodo();for(let e=0;e<t.length;e++){const o=document.createElement("div");o.textContent=t[e].print(),n.appendChild(o)}}}(t.currentTarget.textContent,o)}))}})),l.addEventListener("click",(()=>{e();for(let t=0;t<o.length;t++)o[t].getName()===r&&o.slice(t,1);!function(t){const e=document.querySelectorAll(".projects button");for(let n=0;n<e.length;n++)e[n].textContent===t&&e[n].remove()}(r)})),function(){const t=document.querySelector(".dashboard"),e=document.createElement("div");e.setAttribute("class","div-new-inputs");let n=["name","description","due date","priority"];for(let t=0;t<4;t++){const o=document.createElement("input"),r=document.createElement("label");o.setAttribute("type","text"),o.setAttribute("id",`${n[t]}`),r.setAttribute("for",`${n[t]}`),e.appendChild(r),e.appendChild(o)}t.appendChild(e)}(),c.addEventListener("click",(()=>{let e=r;for(let r=0;r<o.length;r++)if(o[r].getName()===e){let e=n(),u=t(e[0],e[1],e[2],e[3]);o[r].push(u)}}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,